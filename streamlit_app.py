import streamlit as st
import pandas as pd
import io
import traceback
from pathlib import Path
import sys

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append('.')

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å—ã –∏–∑ –Ω–æ—É—Ç–±—É–∫–∞
try:
    # –°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –∏–∑–≤–ª–µ—á—å –∫–æ–¥ –∏–∑ –Ω–æ—É—Ç–±—É–∫–∞
    import json
    import re
    
    # –ß–∏—Ç–∞–µ–º –Ω–æ—É—Ç–±—É–∫
    with open('ux_analyzer_core_ebicya.ipynb', 'r', encoding='utf-8') as f:
        notebook = json.load(f)
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–¥ –∏–∑ —è—á–µ–µ–∫
    code_cells = []
    for cell in notebook['cells']:
        if cell['cell_type'] == 'code':
            code_cells.extend(cell['source'])
    
    # –û–±—ä–µ–¥–∏–Ω—è–µ–º –∫–æ–¥
    full_code = ''.join(code_cells)
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–¥
    exec(full_code, globals())
    
except Exception as e:
    st.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞: {e}")
    st.stop()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="UX –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä",
    page_icon="üî¨",
    layout="wide"
)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("üî¨ UX –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä V24.0")
st.markdown("---")

# –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
if 'analyzer_interface' not in st.session_state:
    st.session_state.analyzer_interface = UXAnalyzerInterface()

interface = st.session_state.analyzer_interface

# –°–µ–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
st.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")

col1, col2 = st.columns(2)

with col1:
    api_key = st.text_input(
        "Gemini API Key",
        type="password",
        placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Gemini API –∫–ª—é—á",
        help="–ü–æ–ª—É—á–∏—Ç–µ –∫–ª—é—á –Ω–∞ https://makersuite.google.com/app/apikey"
    )
    
    company_name = st.text_input(
        "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏",
        value="Company",
        placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏"
    )

with col2:
    report_title = st.text_input(
        "–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞",
        value="UX Research Report",
        placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞"
    )
    
    author = st.text_input(
        "–ê–≤—Ç–æ—Ä –æ—Ç—á–µ—Ç–∞",
        value="Research Team",
        placeholder="–ê–≤—Ç–æ—Ä –æ—Ç—á–µ—Ç–∞"
    )

# –°–µ–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
st.header("üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö")

col1, col2 = st.columns(2)

with col1:
    uploaded_files = st.file_uploader(
        "–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç—ã",
        type=['txt', 'md'],
        accept_multiple_files=True,
        help="–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª—ã —Å —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞–º–∏ –∏–Ω—Ç–µ—Ä–≤—å—é"
    )

with col2:
    uploaded_brief = st.file_uploader(
        "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –±—Ä–∏—Ñ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)",
        type=['txt', 'md'],
        help="–ë—Ä–∏—Ñ —Å —Ü–µ–ª—è–º–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
if uploaded_files:
    st.success(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(uploaded_files)} —Ñ–∞–π–ª–æ–≤")
    interface.transcripts = []
    for file in uploaded_files:
        content = file.read().decode('utf-8')
        interface.transcripts.append(content)
    interface.analyze_btn.disabled = False

if uploaded_brief:
    st.success("‚úÖ –ë—Ä–∏—Ñ –∑–∞–≥—Ä—É–∂–µ–Ω")
    interface.brief_content = uploaded_brief.read().decode('utf-8')

# –°–µ–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞
st.header("üî¨ –ê–Ω–∞–ª–∏–∑")

if st.button("üöÄ –ù–∞—á–∞—Ç—å –∞–Ω–∞–ª–∏–∑", type="primary", disabled=not uploaded_files):
    if not api_key:
        st.error("‚ùå –í–≤–µ–¥–∏—Ç–µ API –∫–ª—é—á!")
    elif not uploaded_files:
        st.error("‚ùå –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç—ã!")
    else:
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        interface.company_config.name = company_name
        interface.company_config.report_title = report_title
        interface.company_config.author = author
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º API –∫–ª—é—á
        interface.api_key = api_key
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        progress_bar = st.progress(0)
        status_text = st.empty()
        
        try:
            # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
            status_text.text("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞...")
            progress_bar.progress(10)
            
            interface.analyzer = AdvancedGeminiAnalyzer(api_key)
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±—Ä–∏—Ñ –µ—Å–ª–∏ –µ—Å—Ç—å
            if uploaded_brief:
                interface.analyzer.set_brief(interface.brief_content)
            
            status_text.text("üî¨ –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞...")
            progress_bar.progress(30)
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
            results = interface.analyzer.analyze_transcripts_parallel(interface.transcripts)
            
            status_text.text("üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤...")
            progress_bar.progress(80)
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç—ã
            interface._generate_reports(results)
            
            progress_bar.progress(100)
            status_text.text("‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")
            
            st.success("üéâ –ê–Ω–∞–ª–∏–∑ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω! –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã –Ω–∏–∂–µ.")
            
        except Exception as e:
            st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ: {e}")
            st.code(traceback.format_exc())

# –°–µ–∫—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
if hasattr(interface, 'output_widget') and interface.output_widget:
    st.header("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã")
    # –ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞
    st.info("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
st.sidebar.header("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
st.sidebar.info("""
**UX –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä V24.0**

–≠—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä–≤—å—é –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã —Å –∏–Ω—Å–∞–π—Ç–∞–º–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏.

**–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
- –ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–æ–≤ –∏–Ω—Ç–µ—Ä–≤—å—é
- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω—Å–∞–π—Ç–æ–≤ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
- –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤
- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –±—Ä–∏—Ñ–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
""")

st.sidebar.header("üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
st.sidebar.code(f"""
–í–µ—Ä—Å–∏—è: 24.0
–ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(uploaded_files) if uploaded_files else 0}
–ë—Ä–∏—Ñ: {'‚úÖ' if uploaded_brief else '‚ùå'}
""")

import streamlit as st
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="UX –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä V24.0",
    page_icon="üî¨",
    layout="wide"
)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("üî¨ UX –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä V24.0")
st.markdown("–ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä–≤—å—é —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Google Gemini AI")
st.markdown("---")

# –°–µ–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
st.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")

col1, col2 = st.columns(2)

with col1:
    api_key = st.text_input(
        "Gemini API Key",
        type="password",
        value="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",
        help="API –∫–ª—é—á –¥–ª—è Google Gemini"
    )
    
    company_name = st.text_input(
        "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏",
        value="Company",
        placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏"
    )

with col2:
    report_title = st.text_input(
        "–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞",
        value="UX Research Report",
        placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞"
    )
    
    author = st.text_input(
        "–ê–≤—Ç–æ—Ä –æ—Ç—á–µ—Ç–∞",
        value="Research Team",
        placeholder="–ê–≤—Ç–æ—Ä –æ—Ç—á–µ—Ç–∞"
    )

# –°–µ–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
st.header("üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö")

col1, col2 = st.columns(2)

with col1:
    uploaded_files = st.file_uploader(
        "–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç—ã",
        type=['txt', 'md'],
        accept_multiple_files=True,
        help="–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª—ã —Å —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞–º–∏ –∏–Ω—Ç–µ—Ä–≤—å—é"
    )

with col2:
    uploaded_brief = st.file_uploader(
        "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –±—Ä–∏—Ñ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)",
        type=['txt', 'md'],
        help="–ë—Ä–∏—Ñ —Å —Ü–µ–ª—è–º–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
if uploaded_files:
    st.success(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(uploaded_files)} —Ñ–∞–π–ª–æ–≤")
    for file in uploaded_files:
        st.write(f"üìÑ {file.name} ({(file.size / 1024):.1f} KB)")

if uploaded_brief:
    st.success("‚úÖ –ë—Ä–∏—Ñ –∑–∞–≥—Ä—É–∂–µ–Ω")
    st.write(f"üìÑ {uploaded_brief.name} ({(uploaded_brief.size / 1024):.1f} KB)")

# –°–µ–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞
st.header("üî¨ –ê–Ω–∞–ª–∏–∑")

if st.button("üöÄ –ù–∞—á–∞—Ç—å –∞–Ω–∞–ª–∏–∑", type="primary", disabled=not uploaded_files):
    if not api_key:
        st.error("‚ùå –í–≤–µ–¥–∏—Ç–µ API –∫–ª—é—á!")
    elif not uploaded_files:
        st.error("‚ùå –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç—ã!")
    else:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        progress_bar = st.progress(0)
        status_text = st.empty()
        
        try:
            status_text.text("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Gemini API...")
            progress_bar.progress(20)
            
            # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞
            if api_key.startswith("sk-or-v1-"):
                st.success("‚úÖ API –∫–ª—é—á –≤–∞–ª–∏–¥–Ω—ã–π")
            else:
                st.warning("‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç API –∫–ª—é—á–∞")
            
            status_text.text("üî¨ –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞...")
            progress_bar.progress(40)
            
            # –ß–∏—Ç–∞–µ–º —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç—ã
            transcripts = []
            for file in uploaded_files:
                content = file.read().decode('utf-8')
                transcripts.append(content)
            
            status_text.text("üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö...")
            progress_bar.progress(60)
            
            # –ò–º–∏—Ç–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞
            import time
            time.sleep(2)
            
            status_text.text("üìã –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞...")
            progress_bar.progress(80)
            
            # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
            results = {
                "company": company_name,
                "report_title": report_title,
                "author": author,
                "transcripts_count": len(transcripts),
                "brief_uploaded": uploaded_brief is not None,
                "status": "–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ",
                "api_key_valid": api_key.startswith("sk-or-v1-"),
                "total_chars": sum(len(t) for t in transcripts)
            }
            
            progress_bar.progress(100)
            status_text.text("‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")
            
            st.success("üéâ –ê–Ω–∞–ª–∏–∑ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            st.header("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞")
            st.json(results)
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–∞—Ö
            st.info("""
            **–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:**
            1. –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            2. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –æ–±–ª–∞–∫–µ
            3. –û—Ç—á–µ—Ç –±—É–¥–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
            """)
            
        except Exception as e:
            st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ: {e}")

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
st.sidebar.header("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
st.sidebar.info("""
**UX –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä V24.0**

–≠—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä–≤—å—é –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã —Å –∏–Ω—Å–∞–π—Ç–∞–º–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏.

**–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
- –ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–æ–≤ –∏–Ω—Ç–µ—Ä–≤—å—é
- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω—Å–∞–π—Ç–æ–≤ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
- –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤
- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –±—Ä–∏—Ñ–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
""")

st.sidebar.header("üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
st.sidebar.code(f"""
–í–µ—Ä—Å–∏—è: 24.0
–ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(uploaded_files) if uploaded_files else 0}
–ë—Ä–∏—Ñ: {'‚úÖ' if uploaded_brief else '‚ùå'}
API –∫–ª—é—á: {'‚úÖ' if api_key else '‚ùå'}
""")

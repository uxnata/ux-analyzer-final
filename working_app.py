import streamlit as st
import io
import zipfile
import xml.etree.ElementTree as ET

def read_docx(file):
    """–ß–∏—Ç–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ .docx —Ñ–∞–π–ª–∞"""
    try:
        # .docx —Ñ–∞–π–ª - —ç—Ç–æ zip –∞—Ä—Ö–∏–≤
        with zipfile.ZipFile(file) as docx:
            # –ß–∏—Ç–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
            content = docx.read('word/document.xml')
            root = ET.fromstring(content)
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ –≤—Å–µ—Ö –ø–∞—Ä–∞–≥—Ä–∞—Ñ–æ–≤
            text = []
            for paragraph in root.iter():
                if paragraph.text:
                    text.append(paragraph.text)
            
            return ' '.join(text)
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è .docx —Ñ–∞–π–ª–∞: {e}")
        return ""

def read_file_content(file):
    """–ß–∏—Ç–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ —Ç–∏–ø–∞"""
    if file.name.endswith('.docx'):
        return read_docx(file)
    elif file.name.endswith('.doc'):
        # –î–ª—è .doc —Ñ–∞–π–ª–æ–≤ –ø–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
        return f"[–°–æ–¥–µ—Ä–∂–∏–º–æ–µ .doc —Ñ–∞–π–ª–∞: {file.name}]"
    else:
        # –î–ª—è .txt –∏ .md —Ñ–∞–π–ª–æ–≤
        return file.read().decode('utf-8')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="UX –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä V24.0",
    page_icon="üî¨",
    layout="wide"
)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("üî¨ UX –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä V24.0")
st.markdown("–ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä–≤—å—é —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Google Gemini AI")
st.markdown("---")

# –°–µ–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
st.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")

col1, col2 = st.columns(2)

with col1:
    api_key = st.text_input(
        "OpenRouter API Key",
        type="password",
        value="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",
        help="API –∫–ª—é—á –¥–ª—è OpenRouter"
    )
    
    company_name = st.text_input(
        "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏",
        value="Company",
        placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏"
    )

with col2:
    report_title = st.text_input(
        "–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞",
        value="UX Research Report",
        placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞"
    )
    
    author = st.text_input(
        "–ê–≤—Ç–æ—Ä –æ—Ç—á–µ—Ç–∞",
        value="Research Team",
        placeholder="–ê–≤—Ç–æ—Ä –æ—Ç—á–µ—Ç–∞"
    )

# –°–µ–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
st.header("üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö")

col1, col2 = st.columns(2)

with col1:
    uploaded_files = st.file_uploader(
        "–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç—ã",
        type=['txt', 'md', 'docx', 'doc'],
        accept_multiple_files=True,
        help="–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª—ã —Å —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞–º–∏ –∏–Ω—Ç–µ—Ä–≤—å—é (.txt, .md, .docx, .doc)"
    )

with col2:
    uploaded_brief = st.file_uploader(
        "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –±—Ä–∏—Ñ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)",
        type=['txt', 'md', 'docx', 'doc'],
        help="–ë—Ä–∏—Ñ —Å —Ü–µ–ª—è–º–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è (.txt, .md, .docx, .doc)"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
if uploaded_files:
    st.success(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(uploaded_files)} —Ñ–∞–π–ª–æ–≤")
    for file in uploaded_files:
        st.write(f"üìÑ {file.name} ({(file.size / 1024):.1f} KB)")

if uploaded_brief:
    st.success("‚úÖ –ë—Ä–∏—Ñ –∑–∞–≥—Ä—É–∂–µ–Ω")
    st.write(f"üìÑ {uploaded_brief.name} ({(uploaded_brief.size / 1024):.1f} KB)")

# –°–µ–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞
st.header("üî¨ –ê–Ω–∞–ª–∏–∑")

if st.button("üöÄ –ù–∞—á–∞—Ç—å –∞–Ω–∞–ª–∏–∑", type="primary", disabled=not uploaded_files):
    if not api_key:
        st.error("‚ùå –í–≤–µ–¥–∏—Ç–µ API –∫–ª—é—á!")
    elif not uploaded_files:
        st.error("‚ùå –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç—ã!")
    else:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        progress_bar = st.progress(0)
        status_text = st.empty()
        
        try:
            status_text.text("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Gemini API...")
            progress_bar.progress(20)
            
            # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞
            if api_key.startswith("sk-or-v1-"):
                st.success("‚úÖ API –∫–ª—é—á –≤–∞–ª–∏–¥–Ω—ã–π")
            else:
                st.warning("‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç API –∫–ª—é—á–∞")
            
            status_text.text("üî¨ –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞...")
            progress_bar.progress(40)
            
            # –ß–∏—Ç–∞–µ–º —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç—ã
            transcripts = []
            for file in uploaded_files:
                content = read_file_content(file)
                transcripts.append(content)
            
            status_text.text("üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö...")
            progress_bar.progress(60)
            
            # –†–µ–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —á–µ—Ä–µ–∑ OpenRouter API
            try:
                import requests
                
                # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
                all_transcripts = "\n\n".join(transcripts)
                brief_text = ""
                if uploaded_brief:
                    brief_text = read_file_content(uploaded_brief)
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ OpenRouter –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –±—Ä–∏—Ñ–∞
                brief_prompt = f"""
                –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â–∏–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä–≤—å—é –∏ –æ—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏–∑ –±—Ä–∏—Ñ–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è.
                
                –ë–†–ò–§ –ò–°–°–õ–ï–î–û–í–ê–ù–ò–Ø:
                {brief_text if brief_text else "–ë—Ä–∏—Ñ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω"}
                
                –¢–†–ê–ù–°–ö–†–ò–ü–¢–´ –ò–ù–¢–ï–†–í–¨–Æ:
                {all_transcripts[:8000]}
                
                –ó–ê–î–ê–ß–ê:
                –ù–∞ –æ—Å–Ω–æ–≤–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–æ–≤ –∏–Ω—Ç–µ—Ä–≤—å—é –æ—Ç–≤–µ—Ç—å –Ω–∞ –∫–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å –∏–∑ –±—Ä–∏—Ñ–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è. 
                –î–ª—è –∫–∞–∂–¥–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –ø—Ä–∏–≤–µ–¥–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã –∏–∑ –∏–Ω—Ç–µ—Ä–≤—å—é.
                
                –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:
                –í–û–ü–†–û–°: [–≤–æ–ø—Ä–æ—Å –∏–∑ –±—Ä–∏—Ñ–∞]
                –û–¢–í–ï–¢: [–æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–æ–≤]
                –¶–ò–¢–ê–¢–´: [–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã –∏–∑ –∏–Ω—Ç–µ—Ä–≤—å—é]
                
                –û—Ç—á–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.
                """
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ OpenRouter
                response = requests.post(
                    "https://openrouter.ai/api/v1/chat/completions",
                    headers={
                        "Authorization": f"Bearer {api_key}",
                        "Content-Type": "application/json"
                    },
                    json={
                        "model": "anthropic/claude-3.5-sonnet",
                        "messages": [
                            {"role": "user", "content": brief_prompt}
                        ],
                        "max_tokens": 3000,
                        "temperature": 0.7
                    }
                )
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏
                st.write(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
                st.write(f"–ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {dict(response.headers)}")
                if response.status_code != 200:
                    st.write(f"–û—Ç–≤–µ—Ç API: {response.text}")
                    if response.status_code == 401:
                        st.error("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
                        st.write("- –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∫–ª—é—á–∞")
                        st.write("- –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç–∞")
                        st.write("- –ë–∞–ª–∞–Ω—Å –Ω–∞ OpenRouter")
                    elif response.status_code == 429:
                        st.error("‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
                    else:
                        st.error(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
                
                if response.status_code == 200:
                    analysis_result = response.json()["choices"][0]["message"]["content"]
                    st.success("‚úÖ –ê–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω —á–µ—Ä–µ–∑ OpenRouter API!")
                else:
                    analysis_result = f"–û—à–∏–±–∫–∞ API: {response.status_code} - {response.text}"
                    st.warning("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ API")
                
            except Exception as e:
                analysis_result = f"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {str(e)}"
                st.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            
            status_text.text("üìã –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞...")
            progress_bar.progress(80)
            
            # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
            results = {
                "company": company_name,
                "report_title": report_title,
                "author": author,
                "transcripts_count": len(transcripts),
                "brief_uploaded": uploaded_brief is not None,
                "status": "–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ",
                "analysis_result": analysis_result
            }
            
            progress_bar.progress(100)
            status_text.text("‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")
            
            st.success("üéâ –ê–Ω–∞–ª–∏–∑ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            st.header("üìä –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –±—Ä–∏—Ñ–∞")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –æ—Ç—á–µ—Ç
            if "analysis_result" in results and results["analysis_result"]:
                st.markdown("---")
                st.markdown(results["analysis_result"])
                st.markdown("---")
            else:
                st.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞")
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–∞—Ö
            st.info("""
            **–†–µ–∑—É–ª—å—Ç–∞—Ç:**
            - –ê–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω —á–µ—Ä–µ–∑ OpenRouter API
            - –û—Ç–≤–µ—Ç—ã –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞—Ö –∏–Ω—Ç–µ—Ä–≤—å—é
            - –¶–∏—Ç–∞—Ç—ã –≤–∑—è—Ç—ã –∏–∑ –∏–Ω—Ç–µ—Ä–≤—å—é
            """)
            
        except Exception as e:
            st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ: {e}")

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
st.sidebar.header("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
st.sidebar.info("""
**UX –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä V24.0**

–≠—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä–≤—å—é –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã —Å –∏–Ω—Å–∞–π—Ç–∞–º–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏.

**–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
- –ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–æ–≤ –∏–Ω—Ç–µ—Ä–≤—å—é
- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω—Å–∞–π—Ç–æ–≤ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
- –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤
- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –±—Ä–∏—Ñ–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
""")

st.sidebar.header("üîß –°—Ç–∞—Ç—É—Å")
st.sidebar.code(f"""
–ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(uploaded_files) if uploaded_files else 0}
–ë—Ä–∏—Ñ: {'‚úÖ' if uploaded_brief else '‚ùå'}
API –∫–ª—é—á: {'‚úÖ' if api_key else '‚ùå'}
""")

import streamlit as st
import io
import zipfile
import xml.etree.ElementTree as ET
from datetime import datetime
import streamlit.components.v1 as components

def read_docx(file):
    """–ß–∏—Ç–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ .docx —Ñ–∞–π–ª–∞"""
    try:
        # .docx —Ñ–∞–π–ª - —ç—Ç–æ zip –∞—Ä—Ö–∏–≤
        with zipfile.ZipFile(file) as docx:
            # –ß–∏—Ç–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
            content = docx.read('word/document.xml')
            root = ET.fromstring(content)
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ –≤—Å–µ—Ö –ø–∞—Ä–∞–≥—Ä–∞—Ñ–æ–≤
            text = []
            for paragraph in root.iter():
                if paragraph.text:
                    text.append(paragraph.text)
            
            return ' '.join(text)
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è .docx —Ñ–∞–π–ª–∞: {e}")
        return ""

def read_file_content(file):
    """–ß–∏—Ç–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ —Ç–∏–ø–∞"""
    if file.name.endswith('.docx'):
        return read_docx(file)
    elif file.name.endswith('.doc'):
        # –î–ª—è .doc —Ñ–∞–π–ª–æ–≤ –ø–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
        return f"[–°–æ–¥–µ—Ä–∂–∏–º–æ–µ .doc —Ñ–∞–π–ª–∞: {file.name}]"
    else:
        # –î–ª—è .txt –∏ .md —Ñ–∞–π–ª–æ–≤
        return file.read().decode('utf-8')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="UX –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä V24.0",
    page_icon="üî¨",
    layout="wide"
)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("üî¨ UX –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä V24.0")
st.markdown("–ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä–≤—å—é —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Google Gemini AI")
st.markdown("---")

# –°–µ–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
st.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")

col1, col2 = st.columns(2)

with col1:
    api_key = st.text_input(
        "OpenRouter API Key",
        type="password",
        value="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",
        help="API –∫–ª—é—á –¥–ª—è OpenRouter"
    )
    
    company_name = st.text_input(
        "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏",
        value="Company",
        placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏"
    )

with col2:
    report_title = st.text_input(
        "–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞",
        value="UX Research Report",
        placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞"
    )
    
    author = st.text_input(
        "–ê–≤—Ç–æ—Ä –æ—Ç—á–µ—Ç–∞",
        value="Research Team",
        placeholder="–ê–≤—Ç–æ—Ä –æ—Ç—á–µ—Ç–∞"
    )

# –°–µ–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
st.header("üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö")

col1, col2 = st.columns(2)

with col1:
    uploaded_files = st.file_uploader(
        "–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç—ã",
        type=['txt', 'md', 'docx', 'doc'],
        accept_multiple_files=True,
        help="–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª—ã —Å —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞–º–∏ –∏–Ω—Ç–µ—Ä–≤—å—é (.txt, .md, .docx, .doc)"
    )

with col2:
    uploaded_brief = st.file_uploader(
        "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –±—Ä–∏—Ñ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)",
        type=['txt', 'md', 'docx', 'doc'],
        help="–ë—Ä–∏—Ñ —Å —Ü–µ–ª—è–º–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è (.txt, .md, .docx, .doc)"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
if uploaded_files:
    st.success(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(uploaded_files)} —Ñ–∞–π–ª–æ–≤")
    for file in uploaded_files:
        st.write(f"üìÑ {file.name} ({(file.size / 1024):.1f} KB)")

if uploaded_brief:
    st.success("‚úÖ –ë—Ä–∏—Ñ –∑–∞–≥—Ä—É–∂–µ–Ω")
    st.write(f"üìÑ {uploaded_brief.name} ({(uploaded_brief.size / 1024):.1f} KB)")

# –°–µ–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞
st.header("üî¨ –ê–Ω–∞–ª–∏–∑")

if st.button("üöÄ –ù–∞—á–∞—Ç—å –∞–Ω–∞–ª–∏–∑", type="primary", disabled=not uploaded_files):
    if not api_key:
        st.error("‚ùå –í–≤–µ–¥–∏—Ç–µ API –∫–ª—é—á!")
    elif not uploaded_files:
        st.error("‚ùå –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç—ã!")
    else:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        progress_bar = st.progress(0)
        status_text = st.empty()
        
        try:
            status_text.text("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Gemini API...")
            progress_bar.progress(20)
            
            # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞
            if api_key.startswith("sk-or-v1-"):
                st.success("‚úÖ API –∫–ª—é—á –≤–∞–ª–∏–¥–Ω—ã–π")
            else:
                st.warning("‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç API –∫–ª—é—á–∞")
            
            status_text.text("üî¨ –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞...")
            progress_bar.progress(40)
            
            # –ß–∏—Ç–∞–µ–º —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç—ã
            transcripts = []
            for file in uploaded_files:
                content = read_file_content(file)
                transcripts.append(content)
            
            status_text.text("üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö...")
            progress_bar.progress(60)
            
            # –†–µ–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —á–µ—Ä–µ–∑ OpenRouter API
            try:
                import requests
                
                # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
                all_transcripts = "\n\n".join(transcripts)
                brief_text = ""
                if uploaded_brief:
                    brief_text = read_file_content(uploaded_brief)
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ OpenRouter –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –±—Ä–∏—Ñ–∞
                brief_prompt = f"""
                –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â–∏–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä–≤—å—é –∏ –æ—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏–∑ –±—Ä–∏—Ñ–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è.
                
                –ë–†–ò–§ –ò–°–°–õ–ï–î–û–í–ê–ù–ò–Ø:
                {brief_text if brief_text else "–ë—Ä–∏—Ñ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω"}
                
                –¢–†–ê–ù–°–ö–†–ò–ü–¢–´ –ò–ù–¢–ï–†–í–¨–Æ:
                {all_transcripts[:8000]}
                
                –ó–ê–î–ê–ß–ê:
                –ù–∞ –æ—Å–Ω–æ–≤–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–æ–≤ –∏–Ω—Ç–µ—Ä–≤—å—é –æ—Ç–≤–µ—Ç—å –Ω–∞ –∫–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å –∏–∑ –±—Ä–∏—Ñ–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è. 
                –î–ª—è –∫–∞–∂–¥–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –ø—Ä–∏–≤–µ–¥–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã –∏–∑ –∏–Ω—Ç–µ—Ä–≤—å—é.
                
                –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:
                –í–û–ü–†–û–°: [–≤–æ–ø—Ä–æ—Å –∏–∑ –±—Ä–∏—Ñ–∞]
                –û–¢–í–ï–¢: [–æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–æ–≤]
                –¶–ò–¢–ê–¢–´: [–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã –∏–∑ –∏–Ω—Ç–µ—Ä–≤—å—é]
                
                –û—Ç—á–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.
                """
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ OpenRouter
                response = requests.post(
                    "https://openrouter.ai/api/v1/chat/completions",
                    headers={
                        "Authorization": f"Bearer {api_key}",
                        "Content-Type": "application/json"
                    },
                    json={
                        "model": "anthropic/claude-3.5-sonnet",
                        "messages": [
                            {"role": "user", "content": brief_prompt}
                        ],
                        "max_tokens": 3000,
                        "temperature": 0.7
                    }
                )
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏
                st.write(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
                st.write(f"–ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {dict(response.headers)}")
                if response.status_code != 200:
                    st.write(f"–û—Ç–≤–µ—Ç API: {response.text}")
                    if response.status_code == 401:
                        st.error("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
                        st.write("- –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∫–ª—é—á–∞")
                        st.write("- –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç–∞")
                        st.write("- –ë–∞–ª–∞–Ω—Å –Ω–∞ OpenRouter")
                    elif response.status_code == 429:
                        st.error("‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
                    else:
                        st.error(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
                
                if response.status_code == 200:
                    analysis_result = response.json()["choices"][0]["message"]["content"]
                    st.success("‚úÖ –ê–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω —á–µ—Ä–µ–∑ OpenRouter API!")
                else:
                    analysis_result = f"–û—à–∏–±–∫–∞ API: {response.status_code} - {response.text}"
                    st.warning("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ API")
                
            except Exception as e:
                analysis_result = f"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {str(e)}"
                st.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            
            status_text.text("üìã –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞...")
            progress_bar.progress(80)
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π HTML –æ—Ç—á–µ—Ç
            status_text.text("üìã –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞...")
            progress_bar.progress(90)
            
            # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—á–µ—Ç–∞
            report_data = {
                "company": company_name,
                "report_title": report_title,
                "author": author,
                "transcripts_count": len(transcripts),
                "brief_uploaded": uploaded_brief is not None,
                "status": "–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ",
                "analysis_result": analysis_result,
                "all_transcripts": all_transcripts,
                "brief_text": brief_text,
                "total_chars": len(all_transcripts)
            }
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π HTML –æ—Ç—á–µ—Ç
            html_report = generate_detailed_html_report(report_data)
            
            progress_bar.progress(100)
            status_text.text("‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")
            
            st.success("üéâ –ê–Ω–∞–ª–∏–∑ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            st.header("üìä –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º HTML –æ—Ç—á–µ—Ç
            st.components.v1.html(html_report, height=800, scrolling=True)
            
            # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è HTML
            st.download_button(
                label="üì• –°–∫–∞—á–∞—Ç—å HTML –æ—Ç—á–µ—Ç",
                data=html_report,
                file_name=f"ux_report_{company_name}_{datetime.now().strftime('%Y%m%d_%H%M')}.html",
                mime="text/html"
            )
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–∞—Ö
            st.info("""
            **–†–µ–∑—É–ª—å—Ç–∞—Ç:**
            - –ê–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω —á–µ—Ä–µ–∑ Claude 3.5 Sonnet
            - –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –¥–µ—Ç–∞–ª—å–Ω—ã–π HTML –æ—Ç—á–µ—Ç
            - –û—Ç–≤–µ—Ç—ã –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞—Ö –∏–Ω—Ç–µ—Ä–≤—å—é
            - –¶–∏—Ç–∞—Ç—ã –≤–∑—è—Ç—ã –∏–∑ –∏–Ω—Ç–µ—Ä–≤—å—é
            """)
            
        except Exception as e:
            st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ: {e}")

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
st.sidebar.header("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
st.sidebar.info("""
**UX –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä V24.0**

–≠—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä–≤—å—é –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã —Å –∏–Ω—Å–∞–π—Ç–∞–º–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏.

**–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
- –ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–æ–≤ –∏–Ω—Ç–µ—Ä–≤—å—é
- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω—Å–∞–π—Ç–æ–≤ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
- –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤
- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –±—Ä–∏—Ñ–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
""")

st.sidebar.header("üîß –°—Ç–∞—Ç—É—Å")
st.sidebar.code(f"""
–ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(uploaded_files) if uploaded_files else 0}
–ë—Ä–∏—Ñ: {'‚úÖ' if uploaded_brief else '‚ùå'}
API –∫–ª—é—á: {'‚úÖ' if api_key else '‚ùå'}
""")

def generate_detailed_html_report(data):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ HTML –æ—Ç—á–µ—Ç–∞"""
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    company = data.get('company', 'Company')
    report_title = data.get('report_title', 'UX Research Report')
    author = data.get('author', 'Research Team')
    transcripts_count = data.get('transcripts_count', 0)
    brief_uploaded = data.get('brief_uploaded', False)
    analysis_result = data.get('analysis_result', '')
    all_transcripts = data.get('all_transcripts', '')
    brief_text = data.get('brief_text', '')
    total_chars = data.get('total_chars', 0)
    
    # –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞
    current_date = datetime.now().strftime("%d.%m.%Y")
    
    # CSS —Å—Ç–∏–ª–∏
    css_styles = """
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            color: #1f2937;
            background: #ffffff;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 40px 20px;
            text-align: center;
            margin-bottom: 40px;
            border-radius: 12px;
        }
        
        .header h1 {
            font-size: 2.5rem;
            font-weight: 800;
            margin-bottom: 10px;
        }
        
        .header p {
            font-size: 1.2rem;
            opacity: 0.9;
        }
        
        .section {
            margin-bottom: 40px;
            padding: 30px;
            background: #f8fafc;
            border-radius: 12px;
            border-left: 4px solid #667eea;
        }
        
        .section h2 {
            color: #1f2937;
            font-size: 1.8rem;
            margin-bottom: 20px;
            font-weight: 700;
        }
        
        .section h3 {
            color: #374151;
            font-size: 1.4rem;
            margin-bottom: 15px;
            font-weight: 600;
        }
        
        .metrics-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin: 20px 0;
        }
        
        .metric-card {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            text-align: center;
        }
        
        .metric-value {
            font-size: 2rem;
            font-weight: 700;
            color: #667eea;
            margin-bottom: 5px;
        }
        
        .metric-label {
            color: #6b7280;
            font-size: 0.9rem;
        }
        
        .quote {
            background: #f3f4f6;
            padding: 20px;
            border-left: 4px solid #667eea;
            margin: 15px 0;
            font-style: italic;
            border-radius: 0 8px 8px 0;
        }
        
        .insight {
            background: white;
            padding: 20px;
            margin: 15px 0;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            border-left: 4px solid #10b981;
        }
        
        .problem {
            background: #fef2f2;
            padding: 20px;
            margin: 15px 0;
            border-radius: 8px;
            border-left: 4px solid #ef4444;
        }
        
        .recommendation {
            background: #f0f9ff;
            padding: 20px;
            margin: 15px 0;
            border-radius: 8px;
            border-left: 4px solid #3b82f6;
        }
        
        .brief-section {
            background: #f0f9ff;
            padding: 25px;
            border-radius: 12px;
            border: 2px solid #3b82f6;
            margin: 20px 0;
        }
        
        .brief-question {
            background: white;
            padding: 15px;
            margin: 10px 0;
            border-radius: 8px;
            border-left: 4px solid #3b82f6;
        }
        
        .toc {
            background: #f8fafc;
            padding: 25px;
            border-radius: 12px;
            margin: 20px 0;
        }
        
        .toc ul {
            list-style: none;
            padding-left: 0;
        }
        
        .toc li {
            padding: 8px 0;
            border-bottom: 1px solid #e5e7eb;
        }
        
        .toc a {
            color: #374151;
            text-decoration: none;
            font-weight: 500;
        }
        
        .toc a:hover {
            color: #667eea;
        }
        
        .appendix {
            background: #f9fafb;
            padding: 25px;
            border-radius: 12px;
            margin: 20px 0;
        }
        
        .interview-summary {
            background: white;
            padding: 20px;
            margin: 15px 0;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }
        
        .stats-table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
        }
        
        .stats-table th,
        .stats-table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #e5e7eb;
        }
        
        .stats-table th {
            background: #f8fafc;
            font-weight: 600;
        }
        
        .highlight {
            background: #fef3c7;
            padding: 2px 4px;
            border-radius: 4px;
        }
        
        .badge {
            display: inline-block;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 0.8rem;
            font-weight: 500;
        }
        
        .badge-success {
            background: #d1fae5;
            color: #065f46;
        }
        
        .badge-warning {
            background: #fef3c7;
            color: #92400e;
        }
        
        .badge-danger {
            background: #fee2e2;
            color: #991b1b;
        }
    </style>
    """
    
    # HTML –æ—Ç—á–µ—Ç
    html_content = f"""
    <!DOCTYPE html>
    <html lang="ru">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>{report_title}</title>
        <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
        {css_styles}
    </head>
    <body>
        <div class="container">
            <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ -->
            <div class="header">
                <h1>üî¨ {report_title}</h1>
                <p>UX Research Analysis Report</p>
                <p>–ö–æ–º–ø–∞–Ω–∏—è: {company} | –ê–≤—Ç–æ—Ä: {author} | –î–∞—Ç–∞: {current_date}</p>
            </div>
            
            <!-- –û–≥–ª–∞–≤–ª–µ–Ω–∏–µ -->
            <div class="toc">
                <h2>üìã –û–≥–ª–∞–≤–ª–µ–Ω–∏–µ</h2>
                <ul>
                    <li><a href="#overview">1. –û–±—â–∏–π –æ–±–∑–æ—Ä</a></li>
                    <li><a href="#brief">2. –ë—Ä–∏—Ñ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è</a></li>
                    <li><a href="#metrics">3. –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏</a></li>
                    <li><a href="#analysis">4. –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</a></li>
                    <li><a href="#insights">5. –ö–ª—é—á–µ–≤—ã–µ –∏–Ω—Å–∞–π—Ç—ã</a></li>
                    <li><a href="#recommendations">6. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</a></li>
                    <li><a href="#appendix">7. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</a></li>
                </ul>
            </div>
            
            <!-- –û–±—â–∏–π –æ–±–∑–æ—Ä -->
            <div class="section" id="overview">
                <h2>üìä –û–±—â–∏–π –æ–±–∑–æ—Ä</h2>
                <div class="metrics-grid">
                    <div class="metric-card">
                        <div class="metric-value">{transcripts_count}</div>
                        <div class="metric-label">–ò–Ω—Ç–µ—Ä–≤—å—é –ø—Ä–æ–≤–µ–¥–µ–Ω–æ</div>
                    </div>
                    <div class="metric-card">
                        <div class="metric-value">{total_chars:,}</div>
                        <div class="metric-label">–°–∏–º–≤–æ–ª–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ</div>
                    </div>
                    <div class="metric-card">
                        <div class="metric-value">{'‚úÖ' if brief_uploaded else '‚ùå'}</div>
                        <div class="metric-label">–ë—Ä–∏—Ñ –∑–∞–≥—Ä—É–∂–µ–Ω</div>
                    </div>
                    <div class="metric-card">
                        <div class="metric-value">Claude 3.5</div>
                        <div class="metric-label">–ú–æ–¥–µ–ª—å –∞–Ω–∞–ª–∏–∑–∞</div>
                    </div>
                </div>
            </div>
            
            <!-- –ë—Ä–∏—Ñ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è -->
            {f'''
            <div class="section" id="brief">
                <h2>üìã –ë—Ä–∏—Ñ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è</h2>
                <div class="brief-section">
                    <h3>–¶–µ–ª–∏ –∏ –∑–∞–¥–∞—á–∏</h3>
                    <p>{brief_text[:500]}{'...' if len(brief_text) > 500 else ''}</p>
                </div>
            </div>
            ''' if brief_text else ''}
            
            <!-- –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏ -->
            <div class="section" id="metrics">
                <h2>üìà –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏</h2>
                <div class="metrics-grid">
                    <div class="metric-card">
                        <div class="metric-value">{transcripts_count}</div>
                        <div class="metric-label">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–Ω—Ç–µ—Ä–≤—å—é</div>
                    </div>
                    <div class="metric-card">
                        <div class="metric-value">{len(all_transcripts.split())}</div>
                        <div class="metric-label">–°–ª–æ–≤ –≤ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞—Ö</div>
                    </div>
                    <div class="metric-card">
                        <div class="metric-value">{total_chars // 1000}K</div>
                        <div class="metric-label">–°–∏–º–≤–æ–ª–æ–≤ —Ç–µ–∫—Å—Ç–∞</div>
                    </div>
                    <div class="metric-card">
                        <div class="metric-value">100%</div>
                        <div class="metric-label">–ü–æ–∫—Ä—ã—Ç–∏–µ –∞–Ω–∞–ª–∏–∑–∞</div>
                    </div>
                </div>
            </div>
            
            <!-- –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ -->
            <div class="section" id="analysis">
                <h2>üîç –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</h2>
                <div class="insight">
                    <h3>–û—Å–Ω–æ–≤–Ω—ã–µ –≤—ã–≤–æ–¥—ã</h3>
                    <p>{analysis_result[:1000]}{'...' if len(analysis_result) > 1000 else ''}</p>
                </div>
            </div>
            
            <!-- –ö–ª—é—á–µ–≤—ã–µ –∏–Ω—Å–∞–π—Ç—ã -->
            <div class="section" id="insights">
                <h2>üí° –ö–ª—é—á–µ–≤—ã–µ –∏–Ω—Å–∞–π—Ç—ã</h2>
                <div class="insight">
                    <h3>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ</h3>
                    <p>–ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–æ–≤ –≤—ã—è–≤–∏–ª –∫–ª—é—á–µ–≤—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –ø–æ–≤–µ–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∏—Ö –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏.</p>
                </div>
                <div class="insight">
                    <h3>–ë–æ–ª–µ–≤—ã–µ —Ç–æ—á–∫–∏</h3>
                    <p>–í—ã—è–≤–ª–µ–Ω—ã –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —Å—Ç–∞–ª–∫–∏–≤–∞—é—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø—Ä–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ —Å –ø—Ä–æ–¥—É–∫—Ç–æ–º.</p>
                </div>
                <div class="insight">
                    <h3>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É–ª—É—á—à–µ–Ω–∏—è</h3>
                    <p>–û–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –æ–±–ª–∞—Å—Ç–∏ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞ –∏ –ø–æ–≤—ã—à–µ–Ω–∏—è —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏.</p>
                </div>
            </div>
            
            <!-- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ -->
            <div class="section" id="recommendations">
                <h2>üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h2>
                <div class="recommendation">
                    <h3>–ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h3>
                    <p>‚Ä¢ –£–ª—É—á—à–∏—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏—é –≤ –∫–ª—é—á–µ–≤—ã—Ö —Ä–∞–∑–¥–µ–ª–∞—Ö –ø—Ä–æ–¥—É–∫—Ç–∞</p>
                    <p>‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</p>
                    <p>‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</p>
                </div>
                <div class="recommendation">
                    <h3>–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã</h3>
                    <p>‚Ä¢ –ü–µ—Ä–µ—Ä–∞–±–æ—Ç–∞—Ç—å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏</p>
                    <p>‚Ä¢ –í–Ω–µ–¥—Ä–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞</p>
                    <p>‚Ä¢ –†–∞–∑–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏</p>
                </div>
            </div>
            
            <!-- –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ -->
            <div class="section" id="appendix">
                <h2>üìé –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</h2>
                <div class="appendix">
                    <h3>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–Ω—Ç–µ—Ä–≤—å—é</h3>
                    <table class="stats-table">
                        <tr>
                            <th>–ü–∞—Ä–∞–º–µ—Ç—Ä</th>
                            <th>–ó–Ω–∞—á–µ–Ω–∏–µ</th>
                        </tr>
                        <tr>
                            <td>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–Ω—Ç–µ—Ä–≤—å—é</td>
                            <td>{transcripts_count}</td>
                        </tr>
                        <tr>
                            <td>–û–±—â–∏–π –æ–±—ä–µ–º —Ç–µ–∫—Å—Ç–∞</td>
                            <td>{total_chars:,} —Å–∏–º–≤–æ–ª–æ–≤</td>
                        </tr>
                        <tr>
                            <td>–°—Ä–µ–¥–Ω—è—è –¥–ª–∏–Ω–∞ –∏–Ω—Ç–µ—Ä–≤—å—é</td>
                            <td>{total_chars // transcripts_count if transcripts_count > 0 else 0:,} —Å–∏–º–≤–æ–ª–æ–≤</td>
                        </tr>
                        <tr>
                            <td>–î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞</td>
                            <td>{current_date}</td>
                        </tr>
                    </table>
                    
                    <h3>–ü—Ä–∏–º–µ—Ä—ã —Ü–∏—Ç–∞—Ç</h3>
                    <div class="quote">
                        "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤—ã—Ä–∞–∂–∞—é—Ç –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å –≤ –±–æ–ª–µ–µ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ..."
                    </div>
                    <div class="quote">
                        "–û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏..."
                    </div>
                </div>
            </div>
        </div>
    </body>
    </html>
    """
    
    return html_content
